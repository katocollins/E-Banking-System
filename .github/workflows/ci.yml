name: MERN Stack Test, Build and Deploy

on: 
  # Triggers the workflow on push and pull request events for the main branch
  push: 
    branches: 
      - production-env
  pull_request: 
    branches: 
      - main

jobs: 
  test: 
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner 
    steps: 
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2 
      - name: Setup Node JS  # Step to setup Node.js environment
        uses: actions/setup-node@v2 
        with: 
          node-version: "18" 
      - name: Install Dependencies  # Install project dependencies
        run: npm install 
      - name: Run Tests  # Run existing tests
        run: npm test 

  build_and_deploy: 
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner 
    needs: test  # This job depends on the successful completion of the 'test' job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' 
    steps: 
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2 
      - name: Set up Node.js  # Step to setup Node.js environment
        uses: actions/setup-node@v2 
        with: 
          node-version: "18" 
      - name: Install dependencies for both backend and frontend  # Install project dependencies
        run: npm install 
      - name: Build frontend  # Build the frontend (includes backend if configured in heroku-postbuild script)
        run: npm run heroku-postbuild 
      - name: Show build log  # Display the build log for debugging purposes
        run: cat /home/runner/.npm/_logs/*.log 
      - name: Deploy to Azure App Service (Single App Service for both backend and frontend)  # Deploy to Azure
        uses: azure/webapps-deploy@v2 
        with: 
          app-name: e-bank 
          slot-name: production 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }} 
      - name: Rollback on Deployment Failure  # Rollback in case of deployment failure
        if: failure() 
        run: | 
          echo "Deployment Failed, Rolling Back..." 
          ssh -o StrictHostKeyChecking=no user@staging-server 'bash -s' << 'EOF' 
           cd /E-Banking-System 
           git reset --hard origin/main 
           pm2 restart e-bank || pm2 start npm --name e-bank -- start 
           EOF 

  deploy_staging: 
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner 
    needs: test  # This job depends on the successful completion of the 'test' job
    steps: 
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2 
      - name: Set up Node.js  # Step to setup Node.js environment
        uses: actions/setup-node@v2 
        with: 
          node-version: "18" 
      - name: Install dependencies for both backend and frontend  # Install project dependencies
        run: npm install 
      - name: Build frontend  # Build the frontend (includes backend if configured in heroku-postbuild script)
        run: npm run heroku-postbuild 
      - name: Deploy to Staging  # Deploy to the staging environment
        uses: azure/webapps-deploy@v2 
        with: 
          app-name: e-bank 
          slot-name: staging 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }} 

  deploy_production: 
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner 
    needs: deploy_staging  # This job depends on the successful completion of the 'deploy_staging' job
    if: github.ref == 'refs/heads/main'  # Only run this job if it's a push to the main branch
    steps: 
      - name: Checkout code  # Step to checkout the code from the repository
        uses: actions/checkout@v2 
      - name: Set up Node.js  # Step to setup Node.js environment
        uses: actions/setup-node@v2 
        with: 
          node-version: "18" 
      - name: Install dependencies for both backend and frontend  # Install project dependencies
        run: npm install 
      - name: Build frontend  # Build the frontend (includes backend if configured in heroku-postbuild script)
        run: npm run heroku-postbuild 
      - name: Deploy to Production  # Deploy to the production environment
        uses: azure/webapps-deploy@v2 
        with: 
          app-name: e-bank 
          slot-name: production 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }} 
      - name: Rollback on Deployment Failure  # Rollback in case of deployment failure
        if: failure() 
        run: | 
          echo "Deployment Failed, Rolling Back..." 
          ssh -o StrictHostKeyChecking=no user@staging-server 'bash -s' << 'EOF' 
           cd /E-Banking-System 
           git reset --hard origin/main 
           pm2 restart e-bank || pm2 start npm --name e-bank -- start 
           EOF
